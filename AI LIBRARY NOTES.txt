
Nodes
	- one base node type with links to other nodes (links to dicts of sets?)
	- each type of agent can specify a sub node type to use (inner module class, probably)
	
MCTS, other planning algorithms -> functions or classes?

Handlers/Managers
	- actions (for specifying strategies)
	- game/simulator
	- planner
	- beliefs
	- models
	- comms?
	
Debug 
	- use logging module http://inventwithpython.com/blog/2012/04/06/stop-using-print-for-debugging-a-5-minute-quickstart-guide-to-pythons-logging-module/
	
Async
	- far advanced, but consider doing something concurrent
	- use coroutines via new asyncio features in python?
	
Visualization
	- specific to nodes, probably
	- may have to have base node type specify an abstract function for giving info to display
	
Profiling
	- custom module to handle certain aspects of profiling