# Standard universe
Universe = vanilla

# Shell file we want to run
Executable = remote_run_test.sh

# Files to transfer and trasnfer settings
should_transfer_files = YES
transfer_input_files = Llab-Co.tar.gz, remote_run_test.sh
# test_env.tar.gz,
when_to_transfer_output = ON_EXIT
# Notification = Error  # only email if error

# Log file save location
output        = Log/job_hc2_v1.$(Cluster).$(Process).out
error         = Log/job_hc2_v1.$(Cluster).$(Process).error
log           = Log/job_hc2_v1.$(Cluster).$(Process).log

# Specs needed on nodes
request_cpus = 1
request_memory = 4GB
request_disk = 1GB


# Node requirements
# +WantsStashCache = true
# HAS_NUMPY == True
requirements = OSGVO_OS_STRING == "RHEL 7" && Arch == "X86_64" && HAS_MODULES == True

# Arguments for the shell file we run
# Arguments = $(Cluster) $(Process)

# Periodically retry the jobs every 1 hour, up to a maximum of 5 retries.
periodic_release =  (NumJobStarts < 2) && ((CurrentTime - EnteredCurrentStatus) > 120)

# Do 10 processes (0-9)
# queue 10

# Arguments for:
#   Process ID
#   Scenario ID
#   Heuristic ID
#   Comm branch factor
#   Comm iterations
#   Comm cost
#   Plan iterations (pre-comms)
#   Experience
#   Trials
#   Process #
Queue Arguments From (
42 1 0 3 100 0 500 100 50 0
42 1 0 3 100 0 500 100 50 1
42 1 1 3 100 0 500 100 50 0
42 1 1 3 100 0 500 100 50 1
42 1 2 3 100 0 500 100 50 0
42 1 2 3 100 0 500 100 50 1
42 1 3 3 100 0 500 100 50 0
42 1 3 3 100 0 500 100 50 1
42 1 4 3 100 0 500 100 50 0
42 1 4 3 100 0 500 100 50 1
42 1 5 3 100 0 500 100 50 0
42 1 5 3 100 0 500 100 50 1
42 1 6 3 100 0 500 100 50 0
42 1 6 3 100 0 500 100 50 1
42 1 7 3 100 0 500 100 50 0
42 1 7 3 100 0 500 100 50 1
42 1 8 3 100 0 500 100 50 0
42 1 8 3 100 0 500 100 50 1
42 1 9 3 100 0 500 100 50 0
42 1 9 3 100 0 500 100 50 1
42 1 10 3 100 0 500 100 50 0
42 1 10 3 100 0 500 100 50 1
42 1 11 3 100 0 500 100 50 0
42 1 11 3 100 0 500 100 50 1
42 1 12 3 100 0 500 100 50 0
42 1 12 3 100 0 500 100 50 1
42 1 13 3 100 0 500 100 50 0
42 1 13 3 100 0 500 100 50 1
43 2 0 100000 1 0 500 100 50 1
43 2 1 100000 1 0 500 100 50 1
43 2 2 100000 1 0 500 100 50 1
43 2 3 100000 1 0 500 100 50 1
43 2 4 100000 1 0 500 100 50 1
43 2 5 100000 1 0 500 100 50 1
43 2 6 100000 1 0 500 100 50 1
43 2 7 100000 1 0 500 100 50 1
43 2 8 100000 1 0 500 100 50 1
43 2 9 100000 1 0 500 100 50 1
43 2 10 100000 1 0 500 100 50 1
43 2 11 100000 1 0 500 100 50 1
43 2 12 100000 1 0 500 100 50 1
43 2 13 100000 1 0 500 100 50 1
44 2 3 3 100 0 500 100 50 1
44 2 3 5 100 0 500 100 50 1
44 2 3 10 100 0 500 100 50 1
44 2 3 100 100 0 500 100 50 1
44 2 4 3 100 0 500 100 50 1
44 2 4 5 100 0 500 100 50 1
44 2 4 10 100 0 500 100 50 1
44 2 4 100 100 0 500 100 50 1
44 2 10 3 100 0 500 100 50 1
44 2 10 5 100 0 500 100 50 1
44 2 10 10 100 0 500 100 50 1
44 2 10 100 100 0 500 100 50 1
44 2 11 3 100 0 500 100 50 1
44 2 11 5 100 0 500 100 50 1
44 2 11 10 100 0 500 100 50 1
44 2 11 100 100 0 500 100 50 1
45 2 3 3 100 0 500 100 50 1
45 2 3 3 100 1 500 100 50 1
45 2 3 3 100 5 500 100 50 1
45 2 3 3 100 10 500 100 50 1
45 2 4 3 100 0 500 100 50 1
45 2 4 3 100 1 500 100 50 1
45 2 4 3 100 5 500 100 50 1
45 2 4 3 100 10 500 100 50 1
45 2 10 3 100 0 500 100 50 1
45 2 10 3 100 1 500 100 50 1
45 2 10 3 100 5 500 100 50 1
45 2 10 3 100 10 500 100 50 1
45 2 11 3 100 0 500 100 50 1
45 2 11 3 100 1 500 100 50 1
45 2 11 3 100 5 500 100 50 1
45 2 11 3 100 10 500 100 50 1
46 2 3 3 100 0 500 0 50 1
46 2 3 3 100 0 500 10 50 1
46 2 3 3 100 0 500 25 50 1
46 2 3 3 100 0 500 100 50 1
46 2 3 3 100 0 500 500 50 1
46 2 4 3 100 0 500 0 50 1
46 2 4 3 100 0 500 10 50 1
46 2 4 3 100 0 500 25 50 1
46 2 4 3 100 0 500 100 50 1
46 2 4 3 100 0 500 500 50 1
46 2 10 3 100 0 500 0 50 1
46 2 10 3 100 0 500 10 50 1
46 2 10 3 100 0 500 25 50 1
46 2 10 3 100 0 500 100 50 1
46 2 10 3 100 0 500 500 50 1
46 2 11 3 100 0 500 0 50 1
46 2 11 3 100 0 500 10 50 1
46 2 11 3 100 0 500 25 50 1
46 2 11 3 100 0 500 100 50 1
46 2 11 3 100 0 500 500 50 1
)