BY PRIORITY (ISH)

    Ensure models return new copies, not modified instances.

    Refactor module/package names to lower case.

    Domains
        StarCraft
            Note: will have to figure out queue in scenario; also, caps for research (cannot keep researching same thing over and over)
            Evaluation? Battle simulator? Heuristic? Match to one or more possible goals?
        Small domains:
            Multi-armed bandit (introduce conflict in same bandit? shared obs? someone explores while the other exploits?)
            Cooperative flocking (various roles?)
            Blocks world (tagged blocks which can only be moved by certain agent)
            Traditional pursuit?
            Generated MDP (Noa Agmon's work "Leading Ad Hoc Agents...")

    Plan-space reasoning
        Comm evaluation
        Comm planning

    Visualization
        Improving x coordinates never improves overall structure.

    Cython
        MDP planner (thts_dp)
        Domain scenarios

    Models - for agents
        Barrett model?
        SC build orders or other learning?

    Documentation
        Use docstring convention from Google ( https://google.github.io/styleguide/pyguide.html# Comments )
        Can be set by PyCharm in settings, tools, python integrated tools, docstring format


Nice to have, but completely beyond the scope of the current project.
    Tree/graph abstraction for all solvers (fits a generic visualization framework too!)

    Profiling and unit tests

    Debug
        - use logging module http://inventwithpython.com/blog/2012/04/06/stop-using-print-for-debugging-a-5-minute-quickstart-guide-to-pythons-logging-module/

    Multiprocessing
        - far advanced, but consider doing something parallel

    Authoring - POMDP file input

    Hierarchical Graph Reduction
        Epsilon merging
        Multi-level graph partitioning

